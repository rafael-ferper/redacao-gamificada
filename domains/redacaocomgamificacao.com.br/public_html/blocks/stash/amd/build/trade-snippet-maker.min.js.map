{"version":3,"sources":["../src/trade-snippet-maker.js"],"names":["define","TradeMaker","trade","_trade","prototype","getTrade","getSnippet","preHash","postHash","hashLength","get","Math","max","length","substring"],"mappings":"AAuBAA,OAAM,mCAAC,EAAD,CAAK,UAAW,CAUlB,QAASC,CAAAA,CAAT,CAAoBC,CAApB,CAA2B,CACvB,KAAKC,MAAL,CAAcD,CACjB,CAODD,CAAU,CAACG,SAAX,CAAqBC,QAArB,CAAgC,UAAW,CACvC,MAAO,MAAKF,MACf,CAFD,CASAF,CAAU,CAACG,SAAX,CAAqBE,UAArB,CAAkC,UAAW,CACzC,GAAIC,CAAAA,CAAO,UAAX,CACIC,CAAQ,CAAG,EADf,CAEIN,CAAK,CAAG,KAAKG,QAAL,EAFZ,CAGII,CAAU,CAAG,CAHjB,CAKAF,CAAO,EAAIL,CAAK,CAACQ,GAAN,CAAU,IAAV,EAAkB,GAA7B,CACAF,CAAQ,EAhCE,GAgCV,CACAC,CAAU,CAAGE,IAAI,CAACC,GAAL,CAAS,CAAT,CAAY,IAAML,CAAO,CAACM,MAAR,CAAiBL,CAAQ,CAACK,MAAhC,CAAZ,CAAb,CAKA,MAAON,CAAAA,CAAO,CAAGL,CAAK,CAACQ,GAAN,CAAU,UAAV,EAAsBI,SAAtB,CAAgC,CAAhC,CAAmCL,CAAnC,CAAV,CAA2DD,CACrE,CAdD,CAgBA,MAA4DP,CAAAA,CAE/D,CA9CK,CAAN","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Trade snippet maker module.\n *\n * @package    block_stash\n * @copyright  2017 Adrian Greeve - adriangreeve.com\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine([], function() {\n\n    var START_TAG = '[trade:';\n    var END_TAG = ']';\n\n    /**\n     * Trade snippet maker class.\n     *\n     * @param {Trade} trade The trade.\n     */\n    function TradeMaker(trade) {\n        this._trade = trade;\n    }\n\n    /**\n     * Get the trade.\n     *\n     * @return {Trade}\n     */\n    TradeMaker.prototype.getTrade = function() {\n        return this._trade;\n    };\n\n    /**\n     * Get the snippet.\n     *\n     * @return {String}\n     */\n    TradeMaker.prototype.getSnippet = function() {\n        var preHash = START_TAG,\n            postHash = '',\n            trade = this.getTrade(),\n            hashLength = 3;\n\n        preHash += trade.get('id') + ':';\n        postHash += END_TAG;\n        hashLength = Math.max(3, 32 - (preHash.length + postHash.length));\n\n        // Backup will only encode 32 characters long texts, so we ensure\n        // that the recommended snippet has the required length, in case it's\n        // the only thing in the textarea.\n        return preHash + trade.get('hashcode').substring(0, hashLength) + postHash;\n    };\n\n    return /** @alias module:block_stash/trade-snippet-maker */ TradeMaker;\n\n});\n"],"file":"trade-snippet-maker.min.js"}